#galleryPush(style='background:#3a3a3c; background-size: cover; padding:0px; _:none')

.container-fluid.content
    .container
        if F.video
            #videoArea.row
                .col-md-8.col-sm-8.col-xs-12
                    .firstblock
                        if F.video.properties.videoUrl && F.video.properties.videoUrl.values
                            .videoWrapper
                                if parseInt(F.video.properties.videoUrl.values[0].value.value, 10).toString() === F.video.properties.videoUrl.values[0].value.value
                                    iframe#video(src='https://player.vimeo.com/video/' + F.video.properties.videoUrl.values[0].value.value + '#t=' + (jumpTo ? jumpTo : 0) + '?autopause=1&autoplay=1&badge=0&byline=0&loop=0&portrait=0&title=0', frameborder='0', webkitallowfullscreen, mozallowfullscreen, allowfullscreen)
                                else
                                    iframe#video(src='https://www.youtube.com/embed/' + F.video.properties.videoUrl.values[0].value.value + '?autoplay=1&controls=0&showinfo=0&rel=0', frameborder='0', webkitallowfullscreen, mozallowfullscreen, allowfullscreen)
                        .videoDescription
                            h1.title= F.video.properties.storyteller.values[0].value
                            if F.video.properties['title-' + page.language] && F.video.properties['title-' + page.language].values
                                p.title= F.video.properties['title-' + page.language].values[0].value
                        .row
                            if F.video.properties.author && F.video.properties.author.values
                                .col-md-12
                                    p.description
                                        if F.video.definition.keyname === 'interview'
                                            = G.interviewer
                                        else
                                            = G.author
                                        br
                                        each author in F.video.properties.author.values
                                            b= author.value
                                            br

                                if F.video.properties['description-' + page.language] && F.video.properties['description-' + page.language].values
                                    p.description= F.video.properties['description-' + page.language].values[0].value

                    //- if chapters
                    //-     .timeline
                    //-         ul
                    //-             each c in chapters
                    //-                 li.timecode
                    //-                     a(href='video/' + F.video.properties._id.values[0].value + '?time=' + c.get('info'))
                    //-                         b= c.get('name')
                    //-                         |  #{ c.get('info') }
                    .keywords
                        ul
                            if F.video.properties.curriculumSubjects && F.video.properties.curriculumSubjects.values
                                each category in F.video.properties.curriculumSubjects.values
                                    a(href='video?subject=' + category.value)
                                        li.primary= category.value
                                //- a(href='#')
                                //-     li.secondary Generatsioon
                            if F.video.properties.storyteller && F.video.properties.storyteller.values
                                each storyteller in F.video.properties.storyteller.values
                                    a(href='video?query=' + storyteller.value)
                                        li.tertiary= storyteller.value
                            if F.video.properties.region && F.video.properties.region.values
                                each region in F.video.properties.region.values
                                    a(href='video?region=' + region.value)
                                        li.quatenary= region.value
                    .lastblock
                        ul.sharebuttons
                            a(href='https://www.facebook.com/sharer/sharer.php?u=' + pageUrl, target='_blank')
                                li
                                    img.img-responsive(src='/assets/img/facebook.svg')
                            a(href='http://twitter.com/share?url=' + pageUrl, target='_blank')
                                li
                                    img.img-responsive(src='/assets/img/twitter.svg')
                            a(href='https://plus.google.com/share?url=' + pageUrl, target='_blank')
                                li
                                    img.img-responsive(src='/assets/img/googleplus.svg')
                            a(href='mailto:?subject=' + ((F.video.properties['title-' + page.language] && F.video.properties['title-' + page.language].values) ? F.video.properties['title-' + page.language].values[0].value : '') + '&body=' + pageUrl)
                                li
                                    img.img-responsive(src='/assets/img/email.svg')
                .col-md-4.col-sm-4.col-xs-12
                    .row.related
                        //- each r in related
                        //-     if r.get('_id') !== F.video.properties._id.values[0].value
                        //-         a(href='video/' + r.get('_id') )
                        //-             .col-md-12.col-sm-12.col-xs-6.video(style="background:url('video/picture?id=" + r.get('videoUrl.value + "');background-position: center center; background-size:cover;")
                        //-                 .overlay
                        //-                 .wrapper
                        //-                     h4
                        //-                         span= r.get('storyteller.0.value
                        //-                     p= r.get('title-' + lang + '.value
                        //-                     .btn.btn-primary-outline= locale.openVideo
