extends /layout


block vars
    -
        const getColor = (type) => {
            const colors = {
                undefined:   '',
                tag:         'u-red',
                person:      'u-purple',
                region:      'u-green',
                author:      'u-orange',
                storyteller: 'u-gray',
                red:         'u-red',
                purple:      'u-purple',
                green:       'u-green',
                orange:      'u-orange',
                blue:        'u-blue',
            }
            return type ? colors[type] : colors['undefined']
        }
        var videos_url = self.menu[0].path
        var timestamps = self._regions
            .map((a) => {
                return {
                    time: a.time,
                    label: [(!a.time ? '' : a.time), a['name_' + self.locale]].join(' ').trim(),
                    type: 'region'
                }
            })
            .concat(self._persons
                .map((a) => {
                    return {
                        time: a.time,
                        label: [(!a.time ? '' : a.time), a['forename_' + self.locale], a['surname_' + self.locale]].join(' ').trim(),
                        type: a.type || 'person'
                    }
                })
            )
            .concat(self._tags
                .map((a) => {
                    return {
                        time: a.time,
                        label: [(!a.time ? '' : a.time), a['name_' + self.locale]].join(' ').trim(),
                        type: 'tag'
                    }
                })
            )
            .sort((a,b) => a.label > b.label ? 1 : -1)


block script
    script(src='https://player.vimeo.com/api/player.js')
    script.
        $(function () {
            var player = new Vimeo.Player('video', {
                autoplay: true,
                byline: false,
                speed: true,
                title: false
            })

            var playVideo = function () {
                var startTime = 0

                if (window.location.hash.substr(1)) {
                    var timeArray = window.location.hash.substr(1).split(':')
                    timeArray.unshift('0', '0', '0')
                    startTime = parseInt(timeArray[timeArray.length-3]) * 3600 + parseInt(timeArray[timeArray.length-2]) * 60 + parseInt(timeArray[timeArray.length-1])
                }

                player.setCurrentTime(startTime)

                window.scrollTo(0, 0)
            }
            playVideo()

            $(window).on('hashchange', function () {
                playVideo()
            })
        })


block content
    include /searchbox

    #map-items.hidden
        if self._regions
            each r in self._regions
                .map-item(
                    data-lat=r.lat,
                    data-lng=r.lng,
                    data-path=r.time ? '#' + r.time : null,
                    data-title=[(!r.time ? '' : r.time), r['name_' + self.locale]].join(' ').trim()
                )

    main.main.has-sidebar.u-container
        .content
            article.article
                .u-content
                    .video-wrapper
                        #video(data-vimeo-id='https://player.vimeo.com/video/' + self.videoUrl)
                    h1= self['title_' + self.locale]
                    if self['subtitle_' + self.locale]
                        p
                            b= self['subtitle_' + self.locale]
                    if self['description_' + self.locale]
                        p= self['description_' + self.locale]

                footer
                    ul.details
                        if self.storyteller.length
                            li= self.storyteller.length === 1 ? self.texts.video.storyteller : self.texts.video.storytellers
                                each a in self.storyteller
                                    = ' '
                                    a(href= videos_url + '#' + self._persons.filter((p) => p._id === a).map((p) => p._id)[0])
                                        b= self._persons.filter((p) => p._id === a).map((p) => p['forename_' + self.locale] + ' ' + p['surname_' + self.locale])[0]

                        if self.author.length
                            li= self.author.length === 1 ? self.texts.video.author : self.texts.video.authors
                                each a in self.author
                                    = ' '
                                    a(href= videos_url + '#' + self._persons.filter((p) => p._id === a).map((p) => p._id)[0])
                                        b= self._persons.filter((p) => p._id === a).map((p) => p['forename_' + self.locale] + ' ' + p['surname_' + self.locale])[0]

                    div.tags
                        ul.tags--list
                            each timestamp in timestamps
                                li
                                    a(class=getColor(timestamp.type), href=(timestamp.time ? '#' + timestamp.time : null))
                                        b= timestamp.label

            include /map
            +map(false)

        aside.sidebar
            section.videos--related
                h2= self.texts.video.relatedVideos
                each related_video in self._related_videos
                    article.videos--item(style='background-image:url(/assets/images/' + related_video.path + '.jpg)')
                        a(href='/' + self.locale + '/' + related_video.path + '/')
                            .text
                                h3
                                    span= related_video['title_' + self.locale]
                                p= related_video['subtitle_' + self.locale]
