extends /layout


block vars
    -
        const getColor = () => {
            const colors = [
                '',
                'u-red',
                'u-purple',
                'u-green',
                'u-orange',
                'u-blue',
            ]

            return colors[Math.floor(Math.random() * colors.length)]
        }

        var tags = self.file.tags.filter(a => {
            return !!a['name_' + self.locale]
        }).map(a => {
            if (a['name_' + self.locale]) { return { _id: a._id, title: a['name_' + self.locale] } }
        })
        tags.sort((a, b) => {
            if (a.title.toLowerCase() < b.title.toLowerCase()) { return -1 }
            if (a.title.toLowerCase() > b.title.toLowerCase()) { return 1 }
            return 0
        })

        var regions = self.file.regions.filter(a => {
            return !!a['name_' + self.locale]
        }).map(a => {
            if (a['name_' + self.locale]) { return { _id: a._id, title: a['name_' + self.locale] } }
        })
        regions.sort((a, b) => {
            if (a.title.toLowerCase() < b.title.toLowerCase()) { return -1 }
            if (a.title.toLowerCase() > b.title.toLowerCase()) { return 1 }
            return 0
        })

        var persons = self.file.persons.filter(a => {
            return (a.forename || a.surname)
        }).map(a => {
            if (a.forename || a.surname) { return { _id: a._id, title: [a.forename, a.surname].join(' ') } }
        })
        persons.sort((a, b) => {
            if (a.title.toLowerCase() < b.title.toLowerCase()) { return -1 }
            if (a.title.toLowerCase() > b.title.toLowerCase()) { return 1 }
            return 0
        })


block content
    include /searchbox

    main.main.u-container
        article.article
            h1= self.texts.topics.title
            .tabs
                a.tabs--link.u-active(href='#'+self.texts.topics.subtitles.history.anchor)= self.texts.topics.subtitles.history.label
                a.tabs--link.u-active(href='#'+self.texts.topics.subtitles.humanRights.anchor)= self.texts.topics.subtitles.humanRights.label
                a.tabs--link.u-active(href='#'+self.texts.topics.subtitles.regions.anchor)= self.texts.topics.subtitles.regions.label
                a.tabs--link.u-active(href='#'+self.texts.topics.subtitles.persons.anchor)= self.texts.topics.subtitles.persons.label

                #teemad.tabs--item.u-open
                    .tags
                        h2 Teemad
                        ul.tags--list
                            each t in tags
                                if t.title
                                    li
                                        a(class=getColor(), href='/et/videoteek/#' + t._id)= t.title

                #regioonid.tabs--item
                    .tags
                        h2 Regioonid
                        ul.tags--list
                            each r in regions
                                if r.title
                                    li
                                        a(class=getColor(), href='/et/videoteek/#' + r._id)= r.title

                #isikud.tabs--item
                    .tags
                        h2 Isikud
                        ul.tags--list
                            each i in persons
                                if i.title
                                    li
                                        a(class=getColor(), href='/et/videoteek/#' + i._id)= i.title
